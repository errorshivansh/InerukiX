#Copyright(C)2021errorshivansh


#ThisfileispartofIneruki(TelegramBot)

#Thisprogramisfreesoftware:youcanredistributeitand/ormodify
#itunderthetermsoftheGNUAfferoGeneralPublicLicenseas
#publishedbytheFreeSoftwareFoundation,eitherversion3ofthe
#License,or(atyouroption)anylaterversion.

#Thisprogramisdistributedinthehopethatitwillbeuseful,
#butWITHOUTANYWARRANTY;withouteventheimpliedwarrantyof
#MERCHANTABILITYorFITNESSFORAPARTICULARPURPOSE.Seethe
#GNUAfferoGeneralPublicLicenseformoredetails.

#YoushouldhavereceivedacopyoftheGNUAfferoGeneralPublicLicense
#alongwiththisprogram.Ifnot,see<http://www.gnu.org/licenses/>.

importrequests
fromtelethonimport*
fromtelethonimportevents
fromtelethon.tlimportfunctions,types
fromtelethon.tl.typesimport*

fromIneruki.services.mongoimportmongodbasdb
fromIneruki.services.telethonimporttbot

approved_users=db.approve


asyncdefis_register_admin(chat,user):
ifisinstance(chat,(types.InputPeerChannel,types.InputChannel)):
returnisinstance(
(
awaittbot(functions.channels.GetParticipantRequest(chat,user))
).participant,
(types.ChannelParticipantAdmin,types.ChannelParticipantCreator),
)
ifisinstance(chat,types.InputPeerChat):
ui=awaittbot.get_peer_id(user)
ps=(
awaittbot(functions.messages.GetFullChatRequest(chat.chat_id))
).full_chat.participants.participants
returnisinstance(
next((pforpinpsifp.user_id==ui),None),
(types.ChatParticipantAdmin,types.ChatParticipantCreator),
)
returnFalse


@tbot.on(events.NewMessage(pattern="^/torrent(.*)"))
asyncdef_(event):
approved_userss=approved_users.find({})
forchinapproved_userss:
iid=ch["id"]
userss=ch["user"]
ifevent.is_group:
ifawaitis_register_admin(event.input_chat,event.sender_id):
pass
elifevent.chat_id==iidandevent.sender_id==userss:
pass
else:
return
sender=event.sender_id
search=event.pattern_match.group(1)
index=0
chatid=event.chat_id
msg=awaittbot.send_message(chatid,"Loading...")
msgid=msg.id
awaittbot.edit_message(
chatid,
msgid,
"Inerukifoundsometorrentsforyou.Takealook👇",
buttons=[
[
Button.inline(
"📤GetTorrentsfromSumanjay'sAPI",
data=f"torrent-{sender}|{search}|{index}|{chatid}|{msgid}",
)
],
[
Button.inline(
"❌CancelSearch",data=f"torrentstop-{sender}|{chatid}|{msgid}"
)
],
],
)


@tbot.on(events.CallbackQuery(pattern=r"torrent(\-(.*))"))
asyncdefpaginate_news(event):
approved_userss=approved_users.find({})
forchinapproved_userss:
iid=ch["id"]
userss=ch["user"]
ifevent.is_group:
ifawaitis_register_admin(event.input_chat,event.sender_id):
pass
elifevent.chat_id==iidandevent.sender_id==userss:
pass
else:
return
tata=event.pattern_match.group(1)
data=tata.decode()
meta=data.split("-",1)[1]
#print(meta)
if"|"inmeta:
sender,search,index,chatid,msgid=meta.split("|")
sender=int(sender.strip())
ifnotevent.sender_id==sender:
awaitevent.answer("Youhaven'tsendthatcommand!")
return
search=search.strip()
index=int(index.strip())
num=index
chatid=int(chatid.strip())
msgid=int(msgid.strip())
url=f"https://api.sumanjay.cf/torrent/?query={search}"
try:
results=requests.get(url).json()
exceptExceptionase:
awaitevent.reply(
"Sorry,eithertheserverisdownornoresultsfoundforyourquery."
)
print(e)
return
#print(results)
age=results[int(num)].get("age")
leech=results[int(num)].get("leecher")
mag=results[int(num)].get("magnet")
name=results[int(num)].get("name")
seed=results[int(num)].get("seeder")
size=results[int(num)].get("size")
typ=results[int(num)].get("type")
header=f"**#{num}**"
lastisthis=f"{header}**Name:**{name}\n**Uploaded:**{age}ago\n**Seeders:**{seed}\n**Leechers:**{leech}\n**Size:**{size}\n**Type:**{typ}\n**MagnetLink:**`{mag}`"
awaittbot.edit_message(
chatid,
msgid,
lastisthis,
link_preview=False,
buttons=[
[
Button.inline(
"◀️",data=f"prevtorrent-{sender}|{search}|{num}|{chatid}|{msgid}"
),
Button.inline("❌",data=f"torrentstop-{sender}|{chatid}|{msgid}"),
Button.inline(
"▶️",data=f"nexttorrent-{sender}|{search}|{num}|{chatid}|{msgid}"
),
],
[
Button.inline(
"Refresh🔁",data=f"newtorrent-{sender}|{search}|{chatid}|{msgid}"
)
],
],
)


@tbot.on(events.CallbackQuery(pattern=r"prevtorrent(\-(.*))"))
asyncdefpaginate_prevtorrent(event):
approved_userss=approved_users.find({})
forchinapproved_userss:
iid=ch["id"]
userss=ch["user"]
ifevent.is_group:
ifawaitis_register_admin(event.input_chat,event.sender_id):
pass
elifevent.chat_id==iidandevent.sender_id==userss:
pass
else:
return
tata=event.pattern_match.group(1)
data=tata.decode()
meta=data.split("-",1)[1]
#print(meta)
if"|"inmeta:
sender,search,index,chatid,msgid=meta.split("|")
sender=int(sender.strip())
ifnotevent.sender_id==sender:
awaitevent.answer("Youhaven'tsendthatcommand!")
return
search=search.strip()
index=int(index.strip())
num=index-1
chatid=int(chatid.strip())
msgid=int(msgid.strip())
url=f"https://api.sumanjay.cf/torrent/?query={search}"
try:
results=requests.get(url).json()
exceptExceptionase:
awaitevent.reply("Sorry,InerukiCantfoundanytorrentsforthatword")
print(e)
return
vector=len(results)
ifnum<0:
num=vector-1
#print(results)
age=results[int(num)].get("age")
leech=results[int(num)].get("leecher")
mag=results[int(num)].get("magnet")
name=results[int(num)].get("name")
seed=results[int(num)].get("seeder")
size=results[int(num)].get("size")
typ=results[int(num)].get("type")
header=f"**#{num}**"
lastisthis=f"{header}**Name:**{name}\n**Uploaded:**{age}ago\n**Seeders:**{seed}\n**Leechers:**{leech}\n**Size:**{size}\n**Type:**{typ}\n**MagnetLink:**`{mag}`"
awaittbot.edit_message(
chatid,
msgid,
lastisthis,
link_preview=False,
buttons=[
[
Button.inline(
"◀️",data=f"prevtorrent-{sender}|{search}|{num}|{chatid}|{msgid}"
),
Button.inline("❌",data=f"torrentstop-{sender}|{chatid}|{msgid}"),
Button.inline(
"▶️",data=f"nexttorrent-{sender}|{search}|{num}|{chatid}|{msgid}"
),
],
[
Button.inline(
"Refresh🔁",data=f"newtorrent-{sender}|{search}|{chatid}|{msgid}"
)
],
],
)


@tbot.on(events.CallbackQuery(pattern=r"nexttorrent(\-(.*))"))
asyncdefpaginate_nexttorrent(event):
approved_userss=approved_users.find({})
forchinapproved_userss:
iid=ch["id"]
userss=ch["user"]
ifevent.is_group:
ifawaitis_register_admin(event.input_chat,event.sender_id):
pass
elifevent.chat_id==iidandevent.sender_id==userss:
pass
else:
return
tata=event.pattern_match.group(1)
data=tata.decode()
meta=data.split("-",1)[1]
#print(meta)
if"|"inmeta:
sender,search,index,chatid,msgid=meta.split("|")
sender=int(sender.strip())
ifnotevent.sender_id==sender:
awaitevent.answer("Youhaven'tsendthatcommand!")
return
search=search.strip()
index=int(index.strip())
num=index+1
chatid=int(chatid.strip())
msgid=int(msgid.strip())
url=f"https://api.sumanjay.cf/torrent/?query={search}"
try:
results=requests.get(url).json()
exceptExceptionase:
awaitevent.reply(
"Sorry,eithertheserverisdownornoresultsfoundforyourquery."
)
print(e)
return
vector=len(results)
ifnum>vector-1:
num=0
#print(results)
age=results[int(num)].get("age")
leech=results[int(num)].get("leecher")
mag=results[int(num)].get("magnet")
name=results[int(num)].get("name")
seed=results[int(num)].get("seeder")
size=results[int(num)].get("size")
typ=results[int(num)].get("type")
header=f"**#{num}**"
lastisthis=f"{header}**Name:**{name}\n**Uploaded:**{age}ago\n**Seeders:**{seed}\n**Leechers:**{leech}\n**Size:**{size}\n**Type:**{typ}\n**MagnetLink:**`{mag}`"
awaittbot.edit_message(
chatid,
msgid,
lastisthis,
link_preview=False,
buttons=[
[
Button.inline(
"◀️",data=f"prevtorrent-{sender}|{search}|{num}|{chatid}|{msgid}"
),
Button.inline("❌",data=f"torrentstop-{sender}|{chatid}|{msgid}"),
Button.inline(
"▶️",data=f"nexttorrent-{sender}|{search}|{num}|{chatid}|{msgid}"
),
],
[
Button.inline(
"Refresh🔁",data=f"newtorrent-{sender}|{search}|{chatid}|{msgid}"
)
],
],
)


@tbot.on(events.CallbackQuery(pattern=r"torrentstop(\-(.*))"))
asyncdeftorrentstop(event):
approved_userss=approved_users.find({})
forchinapproved_userss:
iid=ch["id"]
userss=ch["user"]
ifevent.is_group:
ifawaitis_register_admin(event.input_chat,event.sender_id):
pass
elifevent.chat_id==iidandevent.sender_id==userss:
pass
else:
return
tata=event.pattern_match.group(1)
data=tata.decode()
meta=data.split("-",1)[1]
#print(meta)
if"|"inmeta:
sender,chatid,msgid=meta.split("|")
sender=int(sender.strip())
chatid=int(chatid.strip())
msgid=int(msgid.strip())
ifnotevent.sender_id==sender:
awaitevent.answer("Youhaven'tsendthatcommand!")
return
awaittbot.edit_message(
chatid,
msgid,
"Thanksforusing.\n❤️from[Ineruki](t.me/InerukiBot)!",
link_preview=False,
)


@tbot.on(events.CallbackQuery(pattern=r"newtorrent(\-(.*))"))
asyncdefpaginate_nexttorrent(event):
approved_userss=approved_users.find({})
forchinapproved_userss:
iid=ch["id"]
userss=ch["user"]
ifevent.is_group:
ifawaitis_register_admin(event.input_chat,event.sender_id):
pass
elifevent.chat_id==iidandevent.sender_id==userss:
pass
else:
return
tata=event.pattern_match.group(1)
data=tata.decode()
meta=data.split("-",1)[1]
#print(meta)
if"|"inmeta:
sender,search,chatid,msgid=meta.split("|")
sender=int(sender.strip())
ifnotevent.sender_id==sender:
awaitevent.answer("Youhaven'tsendthatcommand!")
return
search=search.strip()
num=0
chatid=int(chatid.strip())
msgid=int(msgid.strip())
url=f"https://api.sumanjay.cf/torrent/?query={search}"
try:
results=requests.get(url).json()
exceptExceptionase:
awaitevent.reply(
"Sorry,eithertheserverisdownornoresultsfoundforyourquery."
)
print(e)
return
vector=len(results)
ifnum>vector-1:
num=0
#print(results)
age=results[int(num)].get("age")
leech=results[int(num)].get("leecher")
mag=results[int(num)].get("magnet")
name=results[int(num)].get("name")
seed=results[int(num)].get("seeder")
size=results[int(num)].get("size")
typ=results[int(num)].get("type")
header=f"**#{num}**"
lastisthis=f"{header}**Name:**{name}\n**Uploaded:**{age}ago\n**Seeders:**{seed}\n**Leechers:**{leech}\n**Size:**{size}\n**Type:**{typ}\n**MagnetLink:**`{mag}`"
awaittbot.edit_message(
chatid,
msgid,
lastisthis,
link_preview=False,
buttons=[
[
Button.inline(
"◀️",data=f"prevtorrent-{sender}|{search}|{num}|{chatid}|{msgid}"
),
Button.inline("❌",data=f"torrentstop-{sender}|{chatid}|{msgid}"),
Button.inline(
"▶️",data=f"nexttorrent-{sender}|{search}|{num}|{chatid}|{msgid}"
),
],
[
Button.inline(
"Refresh🔁",data=f"newtorrent-{sender}|{search}|{chatid}|{msgid}"
)
],
],
)


_help_="""
-/torrent<i>text</i>:Searchfortorrentlinks

SpecialCreditstoSumanjayforapiandalsoforjuliaproject
"""

_mod_name_="Torrent"
